10.08.24
--Снова вернулся к работе над микросервисной ОС
--наигрался в KB

--как создать свою ОС, с чего начать?
--на каком языке лучше писать ОС?
--Подходит ли C#?
--Говорят, что Rust хорошо подходит, но стоит рассматривать связку, чтобы уже написанное ядро используется
связка: взять готовое ядро на C
а остальные компоненты написать на высокоуровневом языке, например, на RUST
*python и java не подходят из-за своих особенностей

-Оказывается можно писать на C#, используя за основу ОС Cosmos https://www.youtube.com/watch?v=aeHRuIEtxXg&list=PLDARQK9fNefrm6KPWniqQ0Od8gBkk-u8i&index=6

-Вспомнил про микросервисы и идею реализовать чистый параллелизм за счёт делегации ядер своим процессам
--Как отдать ядро в монопольное пользование процессу - нет инфы(
--Даже если можно, то ядер нужно много - на Введении в ОС говорили, что из-за того, что процессоры должны общаться, не оптимально вбрать больше 8-16 ядер
--Цены на процессоры дикие, а мне нужны более слабые ядра, но в большем количестве 
--Хотя такие процессоры уже разработаны, но не доступны массовому пользователю

-Вспомнил про идею использовать GPU ядра в качестве маленьких CPU ядер
--похоже, это невозможно:
1.GPU ядра узкоспециализированы
2.Совневаюсь, что GPU ядро, например, CUDA, справится с удовлетворением процесса
3.Возможно нужна доработка, но скорее всего полного параллелизма в одной машине при текущих реалиях не получим

-Вспомнил про Docker - он ведь позволяет в контейнерах запускать различные ОС с минимальной обвязкой
--Подумал, что можно каждый сервис запустить в своём контейнере
--Взаимодействие осуществять по сети, по общей сети или локальной, как отдельных систем
--Чтобы в савокупности это была одна система
--Когда произойдёт переворот в мире процессорных ядер и будет много маленьких вместо нескольких больших ядер - систему будет легко адаптировать под эти изменения
--Более того, эти изменения сделают ОС очень быстрой